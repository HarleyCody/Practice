public class Solution {
    public int subarraySum(int[] nums, int k) {
        int ans = 0, sum = 0;
        HashMap<Integer,Integer> hm = new HashMap<>();//record the how many times of sum[i] occurs during the culmulative sum.
        hm.put(0,1);
        for(int i = 0; i < nums.length; ++i){
            sum += nums[i];
            if(hm.containsKey(sum-k)) //Sum[j]-Sum[i] == K then the sum of subarray between i and j == K, the count + times of ocurrance of sum[i]
                ans += hm.get(sum-k);  // add times of ocurrance of sum-k;
            hm.put(sum,hm.getOrDefault(sum,0)+1);
        }
        return ans;
    }
}
// HashMap record the how many times of sum[i] occurs during the culmulative sum.
// Sum[j]-Sum[i] == K then the sum of subarray between i and j == K, the count + times of ocurrance of sum[i]
