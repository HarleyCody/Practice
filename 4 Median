class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int l = ((nums1.length+nums2.length)+2)/2;
        System.out.println(l);
        int[] nums = new int [l];
        int n1=0,n2=0;
        double median;
        for(int i=0;i<nums.length;i++){
            if (nums1.length==0){
                nums[i]=nums2[n2];
                n2++;
            }else if (nums2.length==0){
                nums[i]=nums1[n1];
                n1++;
            }
            else if (((n1<nums1.length) && (nums1[n1] <= nums2[n2]))||(n2+1>nums2.length)){
                nums[i]=nums1[n1];
                if((n1+1)<nums1.length)
                    n1++;
                else
                    nums1[n1]=nums2[nums2.length-1];
            }else if(((n2 < nums2.length) && (nums1[n1]>=nums2[n2]))||(n1+1>nums1.length)){
                nums[i]=nums2[n2];
                if((n2+1)<nums2.length)
                    n2++;
                else
                    nums2[n2]=nums1[nums1.length-1];
            }
        }
        if((nums1.length+nums2.length)%2==0)
            median = ((nums[nums.length-2]+nums[nums.length-1])/2.0);
        else
            median = nums[nums.length-1];

        return median;
    }
    /*public static void main(String[] args){  // main for debugging
        int l1[]={1,2};
        int l2[]={3,4};
        Solution s1= new Solution();
        s1.findMedianSortedArrays(l1,l2);
    }*/
}
