___________________________________________________________________My Solution(Best)_______________________________________________________
class Solution {
    char[] seed = {'1', '8', '6', '9', '0'};
    List<String> ans = new ArrayList();
    char[] chs;
    public List<String> findStrobogrammatic(int n) {
        chs = new char[n];
        compose(0, n);
        return ans;
    }
    private void compose(int cur, int end){
        if(cur == end / 2){
            if(end % 2 == 1){
                chs[cur] = seed[0];
                ans.add(new String(chs));
                chs[cur] = seed[1];
                ans.add(new String(chs));
                chs[cur] = seed[4];
                ans.add(new String(chs));
            }else{
                ans.add(new String(chs));
            }
            return;
        }
        int s = cur == 0? 4 : 5;
        for(int i = 0; i < s; ++i){
            chs[cur] = seed[i];
            char right = i == 2 ? '9' : i == 3 ? '6' : seed[i];
            chs[end - cur - 1] = right;
            compose(cur + 1, end);
        }
    }
}
