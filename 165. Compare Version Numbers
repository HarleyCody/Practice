class Solution {
    public int compareVersion(String version1, String version2) {
        String[] v1 = version1.split("\\.");
        String[] v2 = version2.split("\\.");
        int i = 0;
        int len = Math.min(v1.length, v2.length);
        for(; i < len; ++i){
            // compare every sections accordingly,
            int n1 = parseInt(v1[i]);
            int n2 = parseInt(v2[i]);
            if(n1 < n2) return -1;
            if(n1 > n2) return 1;
        }
        // deal with longer version number, if residue > 0 then current string is larger.
        // if residue < 0 current string is smaller. 
        // Otherwise they are same(0)
        if(v1.length > len){
            while(i < v1.length){
                int n1 = parseInt(v1[i++]);
                if(n1 > 0) return 1;
            }
        }
        else if(v2.length > len){
            while(i < v2.length){
                int n2 = parseInt(v2[i++]);
                if(n2 > 0) return -1;
            }
        }
        return 0;
    }
    private int parseInt(String str){
        int ans = 0;
        int s = 0;
        while(s < str.length() && str.charAt(s) == '0'){
            ++s;
        }
        while(s < str.length()){
            ans = ans * 10 + str.charAt(s++) - '0';
        }
        return ans;
    }
}
