// My Solution: first part + second part + 1 if there is only one 0 between two parts
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int len = nums.length;
        int prev1 = 0;
        int prev2 = 0;
        int cur = 0;
        int cnt = 0;
        int ans = 0;
        for(int i = 0; i < len; ++i){
            cur += nums[i];
            if(nums[i] == 0){
                ++cnt;
                if(cur != 0){
                    prev1 = prev2;
                    prev2 = cur;
                    if(cnt > 2){
                        prev1 = 0;
                    }
                    ans = Math.max(prev1 + prev2 + 1, ans);
                    cnt = 1;
                    cur = 0;
                }
            }
        }
        
        if(cur == len) return len;
        if(cnt > 1) prev2 = 0;
        ans = Math.max(prev2 + cur + 1, ans);
        return ans;
    }
}
