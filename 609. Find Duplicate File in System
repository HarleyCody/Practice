class Solution {
    public List<List<String>> findDuplicate(String[] paths) {
        HashMap<String,List<String>> root = new HashMap<>(); // unique content as Key, list record file name with same content
        List<List<String>> ans = new ArrayList<>();
        for(String path:paths){ 
            String[] split = path.split(" "); // Get root and seperate directories
            for(int i = 1; i < split.length; ++i){
                
                String content = split[i].substring(split[i].indexOf('(') + 1, split[i].indexOf(')'));
                // Record list
                List<String> list = root.getOrDefault(content, new ArrayList<String> ());
                // renew list
                list.add(split[0]+'/'+ split[i].substring(0,split[i].indexOf('(')));
                // renew map
                root.put(content,list);
            }
        }
        // travel throught map by key, get every list that has same directories
        for(String key: root.keySet()){
            
            // size = 1: directory is not in a "group", do not get into Answer List
            if(root.get(key).size() > 1)
                ans.add(root.get(key));
        }
        return ans;
    }
}
